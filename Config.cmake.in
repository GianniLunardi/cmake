@PACKAGE_INIT@

set("@PROJECT_NAME@_INCLUDE_DIRS" "@CMAKE_INSTALL_FULL_INCLUDEDIR@")
set("@PROJECT_NAME_UPPER@_INCLUDE_DIRS" "@CMAKE_INSTALL_FULL_INCLUDEDIR@")
set("@PROJECT_NAME@_DOXYGENDOCDIR" "${PACKAGE_PREFIX_DIR}/share/doc/@PROJECT_NAME@/doxygen-html")
set("@PROJECT_NAME_UPPER@_DOXYGENDOCDIR" "${PACKAGE_PREFIX_DIR}/share/doc/@PROJECT_NAME@/doxygen-html")
set("@PROJECT_NAME@_DEPENDENCIES" "@_PACKAGE_CONFIG_DEPENDENCIES_PROJECTS@")
set("@PROJECT_NAME@_PKG_CONFIG_DEPENDENCIES" "@_PKG_CONFIG_REQUIRES_LIST@")

# Find absolute library paths for all _PKG_CONFIG_LIBS as CMake expects full paths, while pkg-config does not.
set(_PACKAGE_CONFIG_LIBRARIES "")
set(_PKG_CONFIG_LIBDIR "@_PKG_CONFIG_LIBDIR@")
string(REPLACE " " ";" _PKG_CONFIG_LIBS_LIST "@_PKG_CONFIG_LIBS@")
foreach(lib ${_PKG_CONFIG_LIBS_LIST})
  # If the component is a link directory ("-L/full/path"), skip.
  string(FIND ${lib} "-L" _is_library_dir)
  if(${_is_library_dir} EQUAL -1)
    string(REPLACE "-l" "" lib ${lib})
    find_library(abs_lib_${lib} ${lib} HINTS ${_PKG_CONFIG_LIBDIR})
    message(STATUS  "${lib} searched on ${_PKG_CONFIG_LIBDIR}, found? ${abs_lib_${lib}}")
    list(APPEND _PACKAGE_CONFIG_LIBRARIES "${abs_lib_${lib}}")
  endif()
endforeach()

set("@PROJECT_NAME@_LIBRARIES" ${_PACKAGE_CONFIG_LIBRARIES})
set("@PROJECT_NAME_UPPER@_LIBRARIES" ${_PACKAGE_CONFIG_LIBRARIES})

include(CMakeFindDependencyMacro)
@PACKAGE_DEPENDENCIES@

IF(COMMAND ADD_REQUIRED_DEPENDENCY)
  FOREACH(pkgcfg_dep ${@PROJECT_NAME@_PKG_CONFIG_DEPENDENCIES})
    ADD_REQUIRED_DEPENDENCY(${pkgcfg_dep})
  ENDFOREACH()
ENDIF(COMMAND ADD_REQUIRED_DEPENDENCY)

include("${CMAKE_CURRENT_LIST_DIR}/@TARGETS_EXPORT_NAME@.cmake")
check_required_components("@PROJECT_NAME@")

@PACKAGE_EXTRA_MACROS@
